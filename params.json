{"name":"Fábrica de Cruzeiros","tagline":"Repositório dos Códigos desenvolvidos para a implementação do exercício da 1ª Prova de Programação orientada à objetos 2","body":"## Descrição do Projeto\r\nO projeto Fábrica de Cruzeiros é a implementação na linguagem JAVA de um exercício cobrado na primeira avaliação da disciplina de Programação Orientada à Objetos 2, ministrada pelo professor Paulo Sérgio.\r\n\r\n## Principios utilizados\r\nO Projeto foi desenvolvido seguindo os princípios de padrões de projeto que prioriza a utilização de interfaces e composição(no lugar de herança).\r\n\r\n## Padrões de Projeto\r\nO Projeto foi implementado utilizando essencialmente 4 padrões de projetos, sendo eles: Construtor(Builder), Método Fábrica (Factory Method), Protótipo (Prototype) e Singular (Singleton). Segue a descrição de como eles  foram combinados e implementados:\r\n\r\n### Construtor\r\nO padrão Construtor foi utilizado para montar cada componente do cruzeiro, é por meio dele que as cabines do comandante e de passageiros, motor e botes salva vidas podem ser inseridas no cruzeiro. Possui ainda o método que finaliza e retorna o cruzeiro pronto. Para cada tipo de Cruzeiro existe um Construtor especifico que possui as medidas e ajuste específicos para cada tipo de Cruzeiro. Uma interface Construtor é criada para garantir que todo construtor seja capaz de construir um Cruzeiro de forma adequada dessa forma pode ser possível criar novos tipos de cruzeiros por meio de novos construtores sem afetar os que já existem. Dessa forma o sistema ganha em Flexibilidade e Manutenabilidade. \r\n\r\n### Protótipo\r\nO padrão protótipo foi utilizado nas estruturas Cruzeiros e nos Componentes(Motores,Cabines e Botes) em virtude da necessidade de economia de memória em tempo de execução do sistema. Como em cada Cruzeiro determinadas estruturas como Cabines e Botes podem ser necessário uma quantidade muito grande para se montar no Cruzeiro, clonar as estruturas é uma opção muito mais rápida e eficiente do que a instanciação de novas estruturas. _A mesma ideia é utilizada para a construção dos Cruzeiros em si, onde dado que algum cruzeiro já tenha sido construido não seria necessário acionar o construtor para iniciar o processo de construção (e instanciação) de um novo cruzeiro e seus componentes bastando apenas a clonagem do modelo já pronto._* Com essa estratégia o sistema tem ganho razoável de performance.\r\n\r\n* É de conhecimento que a clonagem de uma estrutura composta apenas clona a estrutura em si. Atributos como as listas (e suas variações) de componentes foram clonadas manualmente quando o Cruzeiro em si era clonado.\r\n\r\n### Método Fabrica e Singular\r\nOs padrões de projeto Método Fabrica e Singular são utilizado na mesma estrutura (Seletor de Cruzeiros) e têm a função de garantir que a classe responsável por fornecer os Cruzeiros seja única. Com o padrão Método Fabrica modelos específicos de Cruzeiros podem ser obtidos de acordo com o parâmetro passado a ela e com isso tem-se melhoras na manutenabilidade do sistema , visto que a instanciação dos objetos esta contida no Construtores e Seletor de Cruzeiro diminuindo o risco de que alguma modificação possa afetar alguma outra parte do sistema.\r\n\r\n## Modelagem\r\nO projeto ainda foi desenvolvido seguindo um modelo UML que prescrevia a estrutura do projeto e a forma como os padrões foram combinados.\r\n\r\n### Diagrama dos Componentes dos Cruzeiros\r\n<img src=\"https://github.com/diegopasti/faculdade-poo2-fabrica_cruzeiros/blob/master/FabricaCruzeiro/Diagrama%20de%20Componentes.png\" alt=\"IMAGEM DO DIAGRAMA\">\r\n\r\n### Diagrama do Sistema\r\n![Diagrama Estrutura do Sistema](https://github.com/diegopasti/faculdade-poo2-fabrica_cruzeiros/blob/master/FabricaCruzeiro/Diagrama%20Cruzeiros.png)\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}